# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

version: "3"

vars:
  CLOUD: gcp
  NOW:
    sh: date "+%Y-%m%d-%H%M"

dotenv:
  - ../../env-testing
  - env

includes:
  aws: ./TaskfileAWS.yml
  gcp: ./TaskfileGCloud.yml
  azure: ./TaskfileAzure.yml

tasks:
  default: task --list-all
  setup: { silent: true }

  status:
    - nuv config use
    - nuv debug info

  kind:create:
    - which docker
    - nuv setup docker create

  kind:delete:
    - nuv setup docker delete

  k3s:create:
    cmds:
    - task: "{{.CLOUD}}:vm:create"
      vars:
          NAME: k3s-test
          TYPE: k3s
    - task: aws:vm:config
    - task: gcp:vm:config
    - nuv cloud gcloud vm-getip k3s-test >_ip
    - nuv cloud aws zone-update k3s.nuvtest.net --wildcard --ip=$(cat _ip)

  mk8s:create:
    cmds:
    - task: "{{.CLOUD}}:vm:create"
      vars:
          NAME: mk8s-test
          TYPE: mk8s
    - task: aws:vm:config
    - task: gcp:vm:config
    - nuv cloud gcloud vm-getip mk8s-test >_ip
    - nuv cloud aws zone-update mk8s.nuvtest.net --wildcard --ip=$(cat _ip)

  k3s:delete:
    cmds:
    - task: "{{.CLOUD}}:vm:delete"
      vars:
          NAME: k3s-test
          TYPE: k3s

  mk8s:delete:
    cmds:
    - task: "{{.CLOUD}}:vm:delete"
      vars:
          NAME: mk8s-test
          TYPE: mk8s

  osh:create:
    cmds:
    - mkdir -p conf/{{.CLOUD}}
    - cp conf/{{.CLOUD}}-install-config.yaml conf/{{.CLOUD}}/install-config.yaml
    - openshift-install create cluster --dir conf/{{.CLOUD}}
    - nuv cloud osh import conf/{{.CLOUD}}/auth/kubeconfig
    - nuv cloud osh setup
    - nuv config use openshift --rename=openshift-nuvolaris-testing

  osh:delete:
    - openshift-install destroy cluster --dir conf/{{.CLOUD}}

  eks:create:
    cmds:
    - task aws:cluster:create
    - nuv cloud eks lb >_cname
    - nuv cloud aws zone-update eks.nuvtest.net --wildcard --cname=$(cat _cname)

  eks:delete:
    cmds:
    - task aws:cluster:delete

  aks:create:
    cmds:
    - task azure:cluster:create
    - nuv cloud aks lb >_ip
    - nuv cloud aws zone-update aks.nuvtest.net --wildcard --ip $(cat _ip)
  
  aks:delete:
    cmds:
    - task azure:cluster:delete

  progress:
    #desc: update the progress
    cmds:
      - |
        if test -z "{{.N}}"
        then echo use task progress N=value
        else 
        X=$(((100*{{.N}})/103))
        echo $X
        curl -L "https://geps.dev/progress/$X?dangerColor=006600&warningColor=006600&successColor=006600" >img/progress.svg
        fi

  all:
    #desc: run all the tests (same as all.sh)
    silent: true
    cmds:
      - |
        {{if eq OS "windows"}} 
          cmd.exe /c "tests\all.cmd" {{.TYPE}}
        {{else}}
          cd tests
          ./all.sh {{.TYPE}}
          cd ..
        {{end}}

  upload-secrets: |
    task gcp:vm:config
    rm -f env-github
    echo SKIP_SSL=true >env-github
    ID_RSA_B64="$(cat ~/.ssh/id_rsa | base64 -w0)"
    echo export ID_RSA_B64=$ID_RSA_B64 >>env-github
    gh -R nuvolaris/nuvolaris-testing secret set "ID_RSA_B64" -b "$ID_RSA_B64"
    K3S_IP=$(nuv cloud gcloud vm-getip k3s-test)
    echo export K3S_IP=$K3S_IP >>env-github
    gh -R nuvolaris/nuvolaris-testing secret set "K3S_IP" -b "$K3S_IP"
    MK8S_IP=$(nuv cloud gcloud vm-getip mk8s-test)
    echo export MK8S_IP=$MK8S_IP >>env-github
    gh -R nuvolaris/nuvolaris-testing secret set "MK8S_IP" -b "$MK8S_IP"
    for i in aks eks gke openshift
    do
       f="$i-nuvolaris-testing"
       nuv config use $f
       nuv debug export F=$f
       VAR="$(echo $i | tr 'a-z-' 'A-Z_')_KUBECONFIG_B64"
       DATA="$(cat $f | base64 -w0)"
       echo "Secret $VAR:"
       gh -R nuvolaris/nuvolaris-testing secret set "$VAR" -b "$DATA"
       echo export "$VAR=$DATA" >>env-github
       rm -v $f
    done

  test-ci: |
    git tag {{.N}}-{{.NOW}}
    git push origin --tags

  d: task test-ci N=kind
  k: task test-ci N=k3s
  m: task test-ci N=mk8s
  e: task test-ci N=eks
  a: task test-ci N=aks
  g: task test-ci N=gke
  o: task test-ci N=osk

  
  