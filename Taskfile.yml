# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

version: '3'
env:
  NOW:
    sh: date +%Y-%m%d-%H%M

dotenv:
- env-adm.src
  
tasks:
  default: task -l
  setup: {silent:true}

  1:
    desc: run kind test
    cmds:
    - git tag kind-$NOW
    - git push origin main --tags

  2:
    desc: run microk8s test
    cmds:
    - git tag mk8s-$NOW
    - git push origin main --tags

  3:
    desc: run for k3s test
    cmds:
    - git tag k3s-$NOW
    - git push origin main --tags

  4:
    desc: run for eks test
    cmds:
    - git tag eks-$NOW
    - git push origin main --tags

  eks:
    desc: prepare eks for test
    cmds:
    - nuv config eks --name=nuvolaris --region=us-east-2 --count=1 --vm=m5.xlarge --disk=50 --key=nuvolaris-key --kubever=1.25
    - nuv setup eks create
    - nuv setup eks lb >conf/eks.lb
    - lib/encdec.sh encode eks ~/.nuv/tmp/kubeconfig

  eks:clean:
    desc: clean eks
    cmds:
    - nuv setup eks delete
    - rm -f conf/eks.*

  osh:
    desc: prepare openshift for test
    cmds:
    - mkdir -p conf/osh ; cp -v conf/install-config.yaml conf/osh
    - openshift-install create cluster --dir conf/osh

  osh:clean:
    desc: prepare openshift for test
    cmds:
    - openshift-install destroy cluster --dir conf/osh

  aks:
    desc: prepare aks for test
    cmds:
    - nuv config aks --name=nuvolaris --region=eastus --count=1 --vm=Standard_B4ms --disk=50 --key=~/.ssh/id_rsa.pub
    - nuv setup aks lb >conf/aks.lb
    - lib/encdec.sh encode aks ~/.nuv/tmp/kubeconfig

  gke:
    desc: prepare gke for test
    cmds:
    - nuv config gke --project=eighth-pen-334717 --name=nuvolaris --region=us-east1 --count=1 --vm=e2-standard-2 --disk=50 
    - nuv setup aks lb >conf/gke.lb
    - lib/encdec.sh encode gke ~/.nuv/tmp/kubeconfig

  conf:clean: rm -f conf/*.lb conf/*.kubeconfig

  debug:
    desc: debug
    cmds:
      - touch debug && git add debug
      - git commit -m $NOW -a || true

  snap:
    desc: commit and run the test
    cmds:
    - if test -e debug ; then git rm debug ; fi
    - git add conf/*.kubeconfig conf/*.lb
    - git commit -m $NOW -a || true

  enter: ssh -o "StrictHostKeyChecking=no" "ubuntu@$(cat ip.txt)"
  
  watch: watch kubectl -n nuvolaris get po,sts

  progress: 
    desc: update the progress
    cmds:
    - |
      if test -z "{{.N}}"
      then echo use task progress N=value
      else curl -L "https://geps.dev/progress/{{.N}}?dangerColor=006600&warningColor=006600&successColor=006600" >img/progress.svg
      fi
